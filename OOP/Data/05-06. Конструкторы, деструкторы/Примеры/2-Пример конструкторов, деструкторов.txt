#include <iostream>
#include <time.h>
using namespace std;

#define RAND(Min,Max) (rand()%((Max)-(Min)+1) + (Min))

/*
   онструкторы, деструкторы
*/

class Test
{
private:
  int   size; // размер массива
  int* mas;  // указатель дл€ динамического массива
public:
  //  онструкторы - специальные автоматические методы
  //  онструктор по умолчанию, конструктор без параметров
  Test() {
    cout << "—работал конструктор по умолчанию" << endl;
    size = 10;
    //cout << "¬ведите значение дл€ size: ";
    //cin >> size;
    mas = new int[size]; // динамический массив
    for (int i = 0; i < size; i++)
    {
      mas[i] = RAND(1, 10);
    }
  }

  // ѕерегруженный конструктор с одним параметром
  Test(int len) {
    cout << "—работал конструктор с одним параметром" << endl;
    size = len;
    mas = new int[size]; // динамический массив
  }

  // ѕерегруженный конструктор с двум€ параметрами
  Test(int* arr, int len) {
    cout << "—работал конструктор с двум€ параметрами" << endl;
    size = len;
    mas = new int[size];
  }

  // ƒеструктор - специальный автоматический метод
  //   всегда один, не перегружаетс€
  //   —лужит дл€ освобождени€ зан€тых классом ресурсов
  ~Test() {
    cout << "—работал деструктор" << endl;
    delete[] mas;
  }

  int  GetSize() { return size; }  // getter
  void SetSize(int newSize) // setter
  {
    size = newSize;
    delete[] mas; // удал€ем старые данные
    mas = new int[size]; // создаем новый массив с новым размером
  }

  void Print() {
    cout << "size = " << size << endl;
    for (int i = 0; i < size; i++) {
      cout << mas[i] << " ";
    }
    cout << endl;
  }
}; // class Test;

int main()
{
  system("chcp 1251 > nul");
  srand(time(0));

  // t1 - экземпл€р класса Test
  Test t1;  // - автоматически будет вызван конструктор по умолчанию
            // не€вный вызов конструктора
  //t1.Test(); - ошибка, конструкторы €вно не вызываютс€

  Test t2(20); // дл€ t2 будет вызван конструктор с одним параметром
               // €вное обращение к конструктору с одним параметром

  int mas[5] = { 1,2,3,4,5, };
  Test t3(mas, 5); // €вное обращение к конструктору с двум€ параметрами

  Test mas2[5];     // дл€ каждого элемента массива будет вызван конструктор по умолчанию
  Test mas3[5](10); // дл€ каждого элемента массива будет вызван конструктор по умолчанию

  cin.get(); cin.get();
}
