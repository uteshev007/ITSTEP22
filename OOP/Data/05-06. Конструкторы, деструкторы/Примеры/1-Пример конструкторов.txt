#include <iostream>
#include <time.h>
using namespace std;

/*
   онструкторы, деструкторы
*/

class Test
{
private:
  int   a; // переменна€ класса
public:
  //  онструкторы - специальные автоматические методы
  //  онструктор по умолчанию, конструктор без параметров
  Test()
  {
    cout << "—работал конструктор по умолчанию" << endl;
    cout << "¬ведите значение дл€ a: ";
    cin >> a;
  }

  // ѕерегруженный конструктор с одним параметром
  Test(int val)
  {
    cout << "—работал конструктор с одним параметром" << endl;
    a = val;
  }

  // ѕерегруженный конструктор с двум€ параметрами
  Test(int A, int B)
  {
    cout << "—работал конструктор с двум€ параметрами" << endl;
    a = A + B;
  }

  // ƒеструктор - специальный автоматический метод
  //   всегда один, не перегружаетс€
  //   —лужит дл€ освобождени€ зан€тых классом ресурсов
  // ƒл€ данного класса - необ€зателен
  ~Test()
  {
    cout << "—работал деструктор" << endl;
  }

  int  Get()         { return a; }  // getter
  void Set(int newA) { a = newA; }  // setter
  
  void Print()
  {
    cout << "a = " << a << endl;
  }
}; // class Test;

int main()
{
  system("chcp 1251 > nul");

  // t1 - экземпл€р класса Test
  Test t1;  // - автоматически будет вызван конструктор по умолчанию
            // не€вный вызов конструктора
  //t1.Test(); - ошибка, конструкторы €вно не вызываютс€
  t1.Print();

  Test t2(20); // дл€ t2 будет вызван конструктор с одним параметром
               // €вное обращение к конструктору с одним параметром
  t2.Print();

  Test t3(2, 5); // €вное обращение к конструктору с двум€ параметрами
  t3.Print();

  Test mas1[5];     // дл€ каждого элемента массива будет вызван конструктор по умолчанию
  Test mas2[5](10); // дл€ первого элемента вызываетс€ конструктор с одним параметром,
                    //   дл€ остальных - конструктор по умолчанию
  Test mas3[5]{ 1,2, {3,4} }; // дл€ первого и второго элемента - конструктор с одним параметром
                              // дл€ третьего - конструктор с двум€ параметрами
                              //   дл€ остальных - конструктор по умолчанию

  //cin.get(); cin.get();
  system("pause");
}
