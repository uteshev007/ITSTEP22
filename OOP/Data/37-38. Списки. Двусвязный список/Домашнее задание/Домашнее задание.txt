Домашнее задание
Тема. Списки. Двусвязный список

Обязательное задание одно из двух на выбор

Задание 1 (по теме класс vector<>)

Создайте приложение для работы автосалона.
Необходимо хранить информацию о продаваемых автомобилях (название, год выпуска, объем двигателя, цену).
Реализуйте интерфейс для добавления данных, удаления данных, отображения данных, сортировке данных по различным параметрам, поиску данных по различным параметрам.
При реализации используйте контейнер вектор vector<> из стандартной библиотеки шаблонов.


Задание 2 (по теме Очереди)

Создайте шаблон класса очереди с приоритетами QueuePrior.
Требуется создать реализации для типичных операций над элементами очереди:
* IsEmpty - проверка очереди на пустоту
* IsFull - проверка очереди на заполнение
* EnQueue - добавление элемента c приоритетом в очередь
* DeQueue  - удаление элемента с самым высоким приоритетом из очереди
* GetFirst - возврат самого большого по приоритету элемента.
    Обращаем ваше внимание, что элемент не удаляется из очереди.
* перегруженный оператор вывода - отображение всех элементов очереди на экран.
    При показе элемента также необходимо отображать приоритет.



Дополнительные задания (по теме Списки)

Задание 3
Создайте шаблонный класс односвязного списка.
Интерфейс класса List<> и вспомогательной структуры Element<> находятся в файле
"1-Работа в классе-TList1.txt"
Необходимо заполнить класс методами, которые описаны в интерфейсе класса List<>


Задание 4
Реализуйте стек в виде односвязного списка.
Требуется реализовать типичные операции по работе со стеком.
При переполнении стека нужно увеличивать его размер.


Задание 5
В существующий класс односвязного списка добавить:
a) перегрузить оператор + (оператор должен возвращать адрес головы нового списка, содержащего элементы обоих списков для которых вызывался оператор);
b) перегрузить оператор * (оператор должен возвращать адрес головы нового списка, содержащего только общие элементы обоих списков для которых вызывался оператор).
