#include <iostream>
#include <string>
#include <time.h>
using namespace std;
struct LC { LC() { system("chcp 1251 > nul"); srand(time(0)); }~LC() { cout << "Good bye...\n"; system("pause"); } }_;

// Макрофункция для генерации случ. числа в
//  диапазоне [Min, Max]
#define RND(Min, Max) rand()%(Max-Min+1)+Min


/*
  Конструкторы, деструкторы

2) Создайте класс Book
Необходимо хранить данные:
Автор, Название, Издательство,
Год, Количество страниц.

Создать массив объектов - класс Library. Вывести:
- список книг заданного автора;
- список книг, выпущенных заданным издательством;
- список книг, выпущенных после заданного года.
Используйте explicit конструктор и константные
функции-члены (например, для отображения данных
о книге и т.д.)
*/

// Массив авторов - список авторов для случ. выбора в InitRand()
string AutorArr[]{
  "Абай",
  "Лавкрафт",
  "Ауэзов",
  "Пушкин",
  "Пратчет",
  "Толкиен",
  "Толстой",
};

// Вычисление длины статического массива AutorArr[]
//  с помощью оператора sizeof()
int sizeAutorArr = 
  sizeof(AutorArr) / sizeof(AutorArr[0]);

// Класс книги
class Book {
  string Autor;
  string Name;
  string Issue;
  int Year;
  int Pages;

public:
  void setAutor(string newAutor) { Autor = newAutor; }
  void setName(string newName) { Name = newName; }
  void setIssue(string newIssue) { Issue = newIssue; }
  void setYear(int newYear) { Year = newYear;}
  void setPages(int newPages) { Pages = newPages; }

  string getAutor() { return Autor; }
  string getName() { return Name; }
  string getIssue() { return Issue; }
  int getYear() { return Year; }
  int getPages() { return Pages; }

  Book() {
    setAutor("Unknown");
    setName("Noname");
    setIssue("");
    setYear(1648);
    setPages(0);
  }

  Book(string newAutor, string newName) {
    setAutor(newAutor);
    setName(newName);
    setIssue("");
    setYear(1648);
    setPages(0);
  }

  Book(string newAutor, string newName, int newYear,
    int newPages) {
    setAutor(newAutor);
    setName(newName);
    setIssue("");
    setYear(newYear);
    setPages(newPages);
  }

  void Print() {
    cout << "Автор - " << getAutor() << endl;
    cout << "Название - " << getName() << endl;
    cout << "Издательство - " << getIssue() << endl;
    cout << "Год издания - " << getYear() << endl;
    cout << "Кол-во страниц - " << getPages() << endl;
  }

  // Метод для заполнения объекта Book случайными
  //  значениями
  void InitRand() {
    // Случайный выбор автора из списка авторов AutorArr[]
    //int i = rand() % sizeAutorArr;
    //Autor = AutorArr[i];
    setAutor(AutorArr[rand() % sizeAutorArr]);

    // Заполнение строки случайными символами
    //int size = 5 + rand() % 12;
    int size = RND(5, 16);
    string temp;
    for (int i = 0; i < size; i++) {
      char symbol = RND('A', 'Z');
      temp += symbol;
    }
    setName(temp); // случ. название книги

    size = RND(4, 12);
    temp = "";
    for (int i = 0; i < size; i++) {
      char symbol = RND('A', 'Z');
      temp += symbol;
    }
    setIssue(temp); // случ. название издательства
  }
}; // class Book;


int main()
{

}
